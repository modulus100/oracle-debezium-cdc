services:
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics --bootstrap-server kafka:9092 --list >/dev/null 2>&1"]
      start_period: 40s
      interval: 10s
      timeout: 5s
      retries: 30

  kafdrop:
    image: obsidiandynamics/kafdrop:4.2.0
#    depends_on:
#      kafka:
#        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms128M -Xmx256M"

  connect:
    image: confluentinc/cp-kafka-connect:7.9.0
    container_name: connect
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: "1"
      CONNECT_CONFIG_STORAGE_TOPIC: connect_configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_PARTITIONS: 1
      CONNECT_OFFSET_STORAGE_PARTITIONS: 1
      CONNECT_STATUS_STORAGE_PARTITIONS: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components,/connect-plugins"
    volumes:
      # Host directory for custom plugins and JDBC drivers
      - ./connect-plugins:/connect-plugins
    healthcheck:
      test: ["CMD", "bash", "-c", "curl -sf http://localhost:8083/connectors || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 20

  connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    ports:
      - "8084:8084"
    environment:
      PORT: "8084"
      PROXY: "true"
      CONNECT_URL: "http://connect:8083"
    depends_on:
      - "connect"

  oracle:
    image: gvenzl/oracle-xe:21-slim
    platform: linux/amd64
    container_name: oracle19c
    environment:
      ORACLE_PASSWORD: "oracle"
      ORACLE_CHARACTERSET: "AL32UTF8"
    ports:
      - "1521:1521"
    volumes:
      - ./scripts/oracle:/docker-entrypoint-initdb.d  # ðŸ‘ˆ XE runs these on first init as SYS
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'select count(*) from cdcuser.customers;' | sqlplus -s system/oracle@//localhost:1521/XEPDB1 | grep -q 1"]  # ðŸ‘ˆ XE PDB is XEPDB1
      interval: 20s
      timeout: 10s
      retries: 30

networks:
  default:
    name: cdcnet